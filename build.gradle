plugins {
  id "kotlin-multiplatform" version "1.3.70"
  id "com.github.johnrengelman.shadow" version "5.2.0"
  id "maven-publish" ; id "signing"
}
repositories { mavenCentral() }

group "org.parserkt.argp"
version "1.0-SNAPSHOT"


def isIDEA = System.getProperty("idea.active") == "true"
def os = org.gradle.internal.os.OperatingSystem.current()
kotlin {
  jvm()
  js { nodejs() }

  linuxX64()
  mingwX64()
  macosX64()

  if (isIDEA) {
    if (os.isMacOsX()) macosX64("native")
    if (os.isWindows()) mingwX64("native")
    if (os.isLinux()) linuxX64("native")
  }
}

ext.kotlin = { name -> return "org.jetbrains.kotlin:kotlin-$name:1.3.70" }
dependencies {
  commonMainImplementation kotlin("stdlib-common")
  jvmMainImplementation kotlin("stdlib")
  jsMainImplementation kotlin("stdlib-js")

  commonTestImplementation kotlin("test-common")
  commonTestImplementation kotlin("test-annotations-common")

  jvmTestImplementation kotlin("test-junit")
  jsTestImplementation kotlin("test-js")
}

kotlin {
  sourceSets {
    def nativeMain = (isIDEA) ? nativeMain : (nativeMain {})
    [macosX64Main, linuxX64Main, mingwX64Main].each { it.dependsOn(nativeMain) }
  }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile) {
  kotlinOptions.jvmTarget = "1.8"
}

//// == Publish ==
import com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar

task shadowJar(type: ShadowJar, dependsOn: jvmJar) {
  baseName = "argparser"
  manifest {}

  dependsOn jvmJar.archiveFile
  configurations = [project.configurations.jvmRuntimeClasspath]
}

def gradleDir = new File(rootProject.projectDir, "gradle")
apply from: new File(gradleDir, "publish.gradle")
